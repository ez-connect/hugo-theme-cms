#
# Code generated by `gkgen`
#

.PHONY: build

# Git
# gitBranch := $(shell git rev-parse --abbrev-ref HEAD)
# gitCommit := $(shell git rev-parse --short HEAD)

-include .makerc
-include .make.env

# Lists all targets
help:
	@grep -B1 -E "^[a-zA-Z0-9_-]+\:([^\=]|$$)" Makefile \
		| grep -v -- -- \
		| sed 'N;s/\n/###/' \
		| sed -n 's/^#: \(.*\)###\(.*\):.*/\2###\1/p' \
		| column -t  -s '###'

#: Removes untracked files from the working tree
clean:
	git clean -fdx

#: Apply patches
patch-update:
	@npm run patch-update

#: Creates patches
patch:
	@npm run patch

#: Linting
lint:
	@exit 1

#: Starts the application with autoReload enabled
run:
	@npm run develop

#: Starts the application with autoReload disabled
serve:
	@npm run start

#: Builds the admin panel
build:
	@NODE_ENV=production npm run build

###########################################################
# OCI
###########################################################
#: Builds an OCI image using instructions in 'Dockerfile'
oci:
	podman build -t $(IMAGE_NAME):$(VERSION) -f Dockerfile $(args)

# Push OCI
#: Pushes an image to a specified location that defined in '.makerc'
oci-push:
ifeq ($(and $(REGISTRY_USERNAME),$(REGISTRY_PWD)),)
	@echo 'User and password are incorrect'
	@exit 1
endif

	podman login -u $(REGISTRY_USERNAME) -p $(REGISTRY_PWD) $(REGISTRY)
	podman push $(IMAGE_NAME):$(VERSION) $(REGISTRY)/$(REGISTRY_REPO)/$(IMAGE_NAME):$(VERSION)

ifneq ($(args),)
	podman push $(IMAGE_NAME):$(VERSION) $(REGISTRY)/$(REGISTRY_REPO)/$(IMAGE_NAME):$(args)
endif

###########################################################
# Helm
###########################################################
#: Generates the Helm chart
helm:
	gkgen helm $(args)
	cp .config/service.k8s.yaml .chart/values.yaml
ifneq ($(wildcard .chart/Chart.lock),)
	rm .chart/Chart.lock
endif
	helm dependency build .chart/
	helm lint .chart/

#: Render chart templates locally and write to '.chart/k8s.yaml'
pod: helm
	helm template $(IMAGE_NAME) .chart/ > .chart/k8s.yaml

#: Uploads chart to the repo that defined in '.makerc'
package: helm
ifndef HELM_REPO
	@echo 'Missing "HELM_REPO" in .makerc'
	@exit 1
endif

	helm cm-push .chart/ $(HELM_REPO)

#: Installs the chart to a remote defined in '.makerc'
install:
	helm repo update && helm install $(IMAGE_NAME) $(HELM_REPO)/$(IMAGE_NAME) -n $(NAMESPACE) --version $(VERSION)

#: Upgrades the release to the current version of the chart
upgrade:
	helm repo update && helm upgrade $(IMAGE_NAME) $(HELM_REPO)/$(IMAGE_NAME) -n $(NAMESPACE) --version $(VERSION)

#: Restarts the release
restart:
	kubectl rollout restart $(DEPLOYMENT_KIND)/$(IMAGE_NAME) -n $(NAMESPACE)

#: Uninstalls the service
uninstall:
	helm uninstall $(IMAGE_NAME) -n $(NAMESPACE)
