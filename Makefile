#
# Code generated by `gkgen`
#

.DEFAULT_GOAL := run
.PHONY: build

# GOPATH := $(shell go env GOPATH)

# Service
name := cms

# Git
# gitBranch := $(shell git rev-parse --abbrev-ref HEAD)
# gitCommit := $(shell git rev-parse --short HEAD)

include .makerc
include .make.env

clean:
	git clean -fdx

lint:
	@exit 1

debug:
	@npm run debug

run:
	@npm run develop

serve:
	@npm run start

build:
	@NODE_ENV=production npm run build

helm:
	gkgen -k $(args) .
	helm lint chart

# K8s
# @buildah bud -t sample:0.0.1 args='--build-arg name=$(name) --build-arg version=$(VERSION)'

oci:
	buildah bud -t $(name):$(VERSION) $(args)

oci-push:
ifeq ($(and $(REGISTRY_USERNAME),$(REGISTRY_PWD)),)
	@echo 'User and password are incorrect'
	@exit 1
endif

	buildah login -u $(REGISTRY_USERNAME) -p $(REGISTRY_PWD) $(REGISTRY)
	buildah push $(name):$(VERSION) $(REGISTRY)/$(REGISTRY_REPO)/$(name):$(VERSION)

# Helm chart
package:
ifndef HELM_REPO
	@echo 'Missing "HELM_REPO" in .makerc'
	@exit 1
endif

	helm lint chart/
	helm cm-push chart/ $(HELM_REPO)

deploy:
	ssh $(SSH_DESTINATION) '$(HELM_CMD) install $(name) $(HELM_REPO)/$(name) -n $(NAMESPACE) --version $(VERSION)'

deploy-delete:
	ssh $(SSH_DESTINATION) '$(HELM_CMD) uninstall $(name) $(HELM_REPO)/$(name) -n $(NAMESPACE) --version $(VERSION)'
