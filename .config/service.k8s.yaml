#
# Code generated by `gkgen` based on Helm template
#

# Dependencies of the chart - https://helm.sh/docs/helm/helm_dependency/
# dependency:
#   nginx:
#     version: "10.0.1"
#     repository: "https://charts.bitnami.com/bitnami"

# ConfigMap
# config:
#   sample-env-config:
#     SPECIAL_LEVEL: very
#     SPECIAL_TYPE: charm
#   sample-config:
#     player_initial_lives: "3"
#     game.properties: |
#       enemy.types=aliens,monsters
#       player.maximum-lives=5
#     user-interface.properties: |
#       color.good=purple
#       color.bad=yellow
#       allow.textmode=true

# secret:
#   sample-secret:
#     type: Opaque
#     stringData:
#       api-token: l2~p|\:Ync">KKwt2JJe7gpnc/#h0ae+

# Deployment or StatefulSet
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
deployment:
  kind: Deployment # one of [Deployment|StatefulSet]
  replicas: 1 # specified number of pod replicas are running at any given time
  # annotations: {}
  image: docker.io/ezconnect/strapi-hugo
  # tag: latest # optional, default is the current version
  # imagePullSecrets: # optional, leave it blank for public registries
  #   - gitlab-auth
  pullPolicy: IfNotPresent # IfNotPresent | Always
  # Environment variables for the containers that run in the Pod
  env:
    APP_KEYS: w+/rpoWUMyZ7XTVPnmu5RA==,wAvgh5cC4Z8oUHuPes8YcQ==,OCF9CSm0iL9muD431HTYPw==,AfBYqqCoPMUKOrSKp4S+7w==
    API_TOKEN_SALT: Az9F8ga74Ng5U3cg3EUkbQ==
    ADMIN_JWT_SECRET: 9S+lrABG4o+rvkGLUG1d7g==
    DATABASE: postgres # sqlite | postgres
    DATABASE_HOST: postgres.default.svc.cluster.local
    DATABASE_PORT: 5432
    DATABASE_NAME: cms
    DATABASE_USERNAME: root
    DATABASE_PASSWORD: M329fEv4u4Tq3FNe
    DATABASE_SSL: false

    EMAIL_API_KEY: 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
    EMAIL_DEFAULT_FROM: noreply@ez-connect.net
    EMAIL_DEFAULT_REPLY_TO: noreply@ez-connect.net
    JWT_SECRET: IMBtkgeQqZ3S4svnyjppcQ==

  # The command and arguments that you define in the configuration file
  # override the default command and arguments provided by the container image.
  # If you define args, but do not define a command, the default command
  # is used with your new arguments.
  command: []
  args: []

  # initContainers:
  #   - name: busy-box
  #     image: docker.io/busy-box
  #     env: []
  #     command: []
  #     args: []

  # Configure Liveness, Readiness and Startup Probes
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  liveness: {}
  readiness: {}

# Exposes the application running on a set of Pods as a network service
service:
  type: ClusterIP
  port:
    http:
      port: 1337

ingress:
  enabled: true
  className: nginx
  # annotations:
  #   nginx.ingress.kubernetes.io/ssl-redirect: "true"
  #   nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  domain: ez-connect.net
  tls: staging-tls
  host:
    http:
      subdomain: cms
      path: /
      type: Prefix

# An addidition ingress if it have different annotations
# ingressEx:
#   enabled: false

#  Persistent volumes
# https://kubernetes.io/docs/concepts/storage/persistent-volumes/
persistent:
  enabled: true
  volume:
    # Use sqlite
    # cms-db:
    #   # class: default # manual, nfs-csi, longhorn... leave empty to use the default
    #   accessModes:
    #     - ReadWriteOnce
    #   size: 16Mi
    #   path: /app/.tmp
    # Public dir
    cms-public:
      # class: default # manual, nfs-csi, longhorn... leave empty to use the default
      accessModes:
        - ReadWriteOnce
      size: 256Mi
      path: /app/public

# podSecurityContext:
#   runAsUser: 1000
#   runAsGroup: 3000
#   fsGroup: 2000

# securityContext:
#   runAsUser: 65534
#   allowPrivilegeEscalation: false

# nodeSelector:
#   kubernetes.io/hostname: microk8s

# https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/#schedule-a-pod-using-required-node-affinity
# affinity: {}

# https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
# tolerations: []

# Resource requests and limits of Pod and container
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
# resource:
#   requests:
#     cpu: 0.2
#     memory: 500Mi
#   limits:
#     cpu: 0.5
#     memory: 1Gi

# Automatically updates a workload resource (such as a Deployment or StatefulSet),
#  with the aim of automatically scaling the workload to match demand.
#  https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
autoscaling:
  enabled: false
  min: 1
  max: 3
  cpu: 0.5
  memory: 0.5

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
